/*
 * Beneficiary
 * The beneficiaries resource is used by an AISP to retrieve the account beneficiaries information for a specific AccountId or to retrieve the beneficiaries information in bulk for account(s) that the PSU has authorised to access.
 *
 * OpenAPI spec version: 3.1.7
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.29
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Beneficiary);
  }
}(this, function(expect, Beneficiary) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Beneficiary.DefaultApi();
  });

  describe('(package)', function() {
    describe('DefaultApi', function() {
      describe('createBeneficiary', function() {
        it('should call createBeneficiary successfully', function(done) {
          // TODO: uncomment, update parameter values for createBeneficiary call and complete the assertions
          /*
          var opts = {};

          instance.createBeneficiary(body, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Beneficiary.ModelObject);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('deleteBeneficiary', function() {
        it('should call deleteBeneficiary successfully', function(done) {
          // TODO: uncomment, update parameter values for deleteBeneficiary call and complete the assertions
          /*

          instance.deleteBeneficiary(beneficiaryId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Beneficiary.ModelObject);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAccountBeneficiaries', function() {
        it('should call getAccountBeneficiaries successfully', function(done) {
          // TODO: uncomment, update parameter values for getAccountBeneficiaries call and complete the assertions
          /*

          instance.getAccountBeneficiaries(accountId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Beneficiary.OBReadBeneficiary5);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getBeneficiaries', function() {
        it('should call getBeneficiaries successfully', function(done) {
          // TODO: uncomment, update parameter values for getBeneficiaries call and complete the assertions
          /*
          var opts = {};

          instance.getBeneficiaries(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Beneficiary.OBReadBeneficiary5);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('updateBeneficiary', function() {
        it('should call updateBeneficiary successfully', function(done) {
          // TODO: uncomment, update parameter values for updateBeneficiary call and complete the assertions
          /*
          var opts = {};

          instance.updateBeneficiary(body, beneficiaryId, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Beneficiary.ModelObject);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
