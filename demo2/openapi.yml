openapi: 3.0.1
info:
  title: Alpha Customer Adapter API
  description: Utility methods for customer management within alpha
  version: "1.0"
servers:
  - url: http://localhost:8180
    description: local
  - url: /alpha-kube/alpha-customer-adapter
    description: kube
  - url: https://api.dev.alpha-platform.co.uk/alpha/v1.0
    description: development
paths:
  /customers/state:
    get:
      tags:
        - CustomerDto
      summary: Get a customer state
      description: Get customer's current state
      operationId: retrieveCustomerState
      parameters: []
      responses:
        "200":
          description: The created customer object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerStateDto'
      security:
        - OpenID:
            - registration
  /internal/v1/companies:
    get:
      tags:
        - Company
        - Internal
      summary: Get company for specific user
      description: Get company for specific userThis API requires a JWT Authorization
        header with a scope of account.It is used for service to service communication
      operationId: retrieveCompaniesForUser
      parameters:
        - name: x-correlation-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          required: true
          schema:
            type: string
            default: ""
      responses:
        "200":
          description: List of companies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyDto'
        "404":
          description: Companies not found
        "500":
          description: Internal Server Error
      security:
        - BearerAuth: []
        - OpenID:
            - accounts
    put:
      tags:
        - Company
        - Internal
      summary: Update a company
      description: Update a companyThis API requires a JWT Authorization header with
        a scope of account or registration. It is used for service to service communication
      operationId: updateCompany
      parameters:
        - name: x-correlation-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          required: true
          schema:
            type: string
            default: ""
        - name: x-idempotent-key
          in: header
          description: 'Every request will be processed only once per x-idempotency-key.The
          Idempotency Key will be valid for 24 hours. '
          required: true
          schema:
            type: string
            default: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyDto'
        required: true
      responses:
        "200":
          description: Company updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyDto'
        "404":
          description: Company not found
        "500":
          description: Internal Server Error
      security:
        - BearerAuth: []
        - OpenID:
            - accounts
            - registration
    post:
      tags:
        - Company
        - Internal
      summary: Create a new company entity
      description: Create a new company entityThis API requires a JWT Authorization
        header with a scope of account.It is used for service to service communication
      operationId: createCompany
      parameters:
        - name: x-correlation-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          required: true
          schema:
            type: string
            default: ""
        - name: x-idempotent-key
          in: header
          description: 'Every request will be processed only once per x-idempotency-key.The
          Idempotency Key will be valid for 24 hours. '
          required: true
          schema:
            type: string
            default: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyDto'
        required: true
      responses:
        "201":
          description: Company created
        "500":
          description: Internal Server Error
        "200":
          description: createCompany 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyDto'
      security:
        - BearerAuth: []
        - OpenID:
            - accounts
  /internal/v1/companies/profiles:
    put:
      tags:
        - Company
        - Internal
      summary: Update a company profile
      description: Update a company profileThis API requires a JWT Authorization header
        with a scope of account or registration.It is used for service to service
        communication
      operationId: updateCompanyProfile
      parameters:
        - name: x-correlation-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          required: true
          schema:
            type: string
            default: ""
        - name: x-idempotent-key
          in: header
          description: 'Every request will be processed only once per x-idempotency-key.The
          Idempotency Key will be valid for 24 hours. '
          required: true
          schema:
            type: string
            default: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyProfileDto'
        required: true
      responses:
        "200":
          description: Company updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyDto'
        "404":
          description: Company not found
        "500":
          description: Internal Server Error
      security:
        - BearerAuth: []
        - OpenID:
            - accounts
            - registration
  /internal/v1/companies/{companyId}:
    get:
      tags:
        - Company
        - Internal
      summary: Get company based on its id
      description: Get company based on its idThis API requires a JWT Authorization
        header with a scope of account.  It is used for service to service communication
      operationId: retrieveCompanyViaUniqueId
      parameters:
        - name: x-correlation-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          required: true
          schema:
            type: string
            default: ""
        - name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Company details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyDto'
        "404":
          description: Company not found
        "500":
          description: Internal Server Error
      security:
        - BearerAuth: []
        - OpenID:
            - accounts
  /internal/v1/companies/{companyId}/directors:
    get:
      tags:
        - Company
        - Internal
      summary: Get list of director for specific company
      description: Get list of director for specific company.This API requires a JWT
        Authorization header with a scope of account.It is used for service to service
        communication
      operationId: retrieveCompanyDirectors
      parameters:
        - name: x-correlation-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          required: true
          schema:
            type: string
            default: ""
        - name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of directors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        "404":
          description: Company not found
        "500":
          description: Internal Server Error
      security:
        - BearerAuth: []
        - OpenID:
            - accounts
    post:
      tags:
        - Company
        - Internal
      summary: Add a director to a company
      description: Add a director to a companyThis API requires a JWT Authorization
        header with a scope of account or registration. It is used for service to
        service communication
      operationId: createCompanyDirectors
      parameters:
        - name: x-correlation-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          required: true
          schema:
            type: string
            default: ""
        - name: x-idempotent-key
          in: header
          description: 'Every request will be processed only once per x-idempotency-key.The
          Idempotency Key will be valid for 24 hours. '
          required: true
          schema:
            type: string
            default: ""
        - name: companyId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Customer'
        required: true
      responses:
        "201":
          description: Director added
        "500":
          description: Internal Server Error
        "200":
          description: createCompanyDirectors 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
      security:
        - BearerAuth: []
        - OpenID:
            - accounts
            - registration
  /internal/v1/customers:
    get:
      tags:
        - Customer
        - Internal
      summary: Get a customers internal record.  This includes all data about the
        customer.
      description: Get a customers internal record.  This includes all data about
        the customer.
      operationId: getCustomer
      parameters:
        - name: x-correlation-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          required: true
          schema:
            type: string
            default: ""
        - name: userId
          in: query
          required: true
          schema:
            type: string
            default: "0"
        - name: customerId
          in: query
          required: true
          schema:
            type: string
            default: "0"
      responses:
        "200":
          description: Customer found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        "500":
          description: Internal Server Error
      security:
        - BearerAuth:
            - registration
            - accounts
            - device
            - admin
    put:
      tags:
        - Customer
        - Internal
      summary: Update customer.
      description: Update customer.
      operationId: updateCustomer
      parameters:
        - name: x-correlation-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          required: true
          schema:
            type: string
            default: ""
        - name: x-idempotent-key
          in: header
          description: 'Every request will be processed only once per x-idempotency-key.The
          Idempotency Key will be valid for 24 hours. '
          required: true
          schema:
            type: string
            default: ""
      requestBody:
        description: The customer to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        "200":
          description: Customer updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        "500":
          description: Internal Server Error
      security:
        - BearerAuth:
            - registration
            - accounts
            - device
            - admin
    post:
      tags:
        - Customer
        - Internal
      summary: Create a customer record.
      description: Create a customer record.
      operationId: createCustomer
      parameters:
        - name: x-correlation-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          required: true
          schema:
            type: string
            default: ""
        - name: x-idempotent-key
          in: header
          description: 'Every request will be processed only once per x-idempotency-key.The
          Idempotency Key will be valid for 24 hours. '
          required: true
          schema:
            type: string
            default: ""
      requestBody:
        description: The customer to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        "201":
          description: Customer created
        "500":
          description: Internal Server Error
        "200":
          description: The created customer object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
      security:
        - BearerAuth:
            - registration
            - accounts
            - device
            - admin
    patch:
      tags:
        - Customer
        - Internal
      summary: Patching customer details.
      description: Patching customer details.
      operationId: patchCustomer
      parameters:
        - name: x-correlation-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          required: true
          schema:
            type: string
            default: ""
        - name: x-idempotent-key
          in: header
          description: 'Every request will be processed only once per x-idempotency-key.The
          Idempotency Key will be valid for 24 hours. '
          required: true
          schema:
            type: string
            default: ""
      requestBody:
        description: The customer's details to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        "200":
          description: Customer updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        "500":
          description: Internal Server Error
      security:
        - BearerAuth:
            - registration
            - accounts
            - device
            - admin
  /internal/v1/customers/checks/credit:
    get:
      tags:
        - Customer
        - Internal
      summary: Retrieve Customer Credit Application.
      description: Retrieve Customer Credit Application.
      operationId: retrieveCustomerCreditApplication
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
            default: "0"
        - name: customerId
          in: query
          required: true
          schema:
            type: string
            default: "0"
        - name: type
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Type'
      responses:
        "200":
          description: Customer credit application found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerCreditDto'
        "500":
          description: Internal Server Error
      security:
        - BearerAuth:
            - registration
            - accounts
            - device
            - admin
    put:
      tags:
        - Customer
        - Internal
      summary: Update Customer Credit Application.
      description: Update Customer Credit Application.
      operationId: updateCustomerCreditApplication
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerCreditApplicationUpdate'
        required: true
      responses:
        "201":
          description: Customer credit application updated
        "500":
          description: Internal Server Error
        "200":
          description: customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
      security:
        - BearerAuth:
            - registration
            - accounts
            - device
            - admin
  /internal/v1/customers/companies:
    get:
      tags:
        - Customer
        - Internal
      summary: Retrieve Customer Companies.
      description: Retrieve Customer Companies.
      operationId: retrieveCustomerCompanies
      parameters:
        - name: x-correlation-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          required: true
          schema:
            type: string
            default: ""
        - name: userId
          in: query
          required: true
          schema:
            type: string
            default: "0"
        - name: customerId
          in: query
          required: true
          schema:
            type: string
            default: "0"
      responses:
        "200":
          description: Customer retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyDto'
        "500":
          description: Internal Server Error
      security:
        - BearerAuth:
            - registration
            - accounts
            - device
            - admin
  /protected/v1/companies:
    put:
      tags:
        - Company
        - Protected
      summary: Update company information
      description: Update company information.This API requires a JWT Authorization
        header with a scope of account. It is used for service to service communication
      operationId: updateCompany_1
      parameters:
        - name: x-api-key
          in: header
          description: 'API Key to obtain access to the api '
          required: true
          schema:
            type: string
            default: ""
        - name: x-correlation-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          required: true
          schema:
            type: string
            default: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyDto'
        required: true
      responses:
        "200":
          description: Company updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyDto'
        "404":
          description: Company not found
        "500":
          description: Internal Server Error
      security:
        - ApiKey: []
  /protected/v1/companies/{companyId}/directors:
    get:
      tags:
        - Company
        - Protected
      summary: Get list of director for specific company
      description: Get list of director for specific company.This API requires a JWT
        Authorization header with a scope of account. It is used for service to service
        communication
      operationId: retrieveCompanyDirectors_1
      parameters:
        - name: x-api-key
          in: header
          description: 'API Key to obtain access to the api '
          required: true
          schema:
            type: string
            default: ""
        - name: x-correlation-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          required: true
          schema:
            type: string
            default: ""
        - name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of directors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        "404":
          description: Company not found
        "500":
          description: Internal Server Error
      security:
        - ApiKey: []
  /protected/v1/customers:
    get:
      tags:
        - Protected
      summary: Get a customer record
      operationId: retrieveCustomer
      parameters:
        - name: x-api-key
          in: header
          description: 'API Key to obtain access to the api '
          required: true
          schema:
            type: string
            default: ""
        - name: x-correlation-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          required: true
          schema:
            type: string
            default: ""
        - name: userId
          in: query
          required: true
          schema:
            type: string
            default: "0"
        - name: customerId
          in: query
          required: true
          schema:
            type: string
            default: "0"
        - name: email
          in: query
          required: true
          schema:
            type: string
            default: 0@0
      responses:
        "200":
          description: retrieveCustomer 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
      security:
        - ProtectedApiKey: []
    put:
      tags:
        - Customer
        - Protected
      summary: Update a customer record
      operationId: updateCustomer_1
      parameters:
        - name: x-api-key
          in: header
          description: 'API Key to obtain access to the api '
          required: true
          schema:
            type: string
            default: ""
        - name: x-correlation-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          required: true
          schema:
            type: string
            default: ""
        - name: x-idempotent-key
          in: header
          description: 'Every request will be processed only once per x-idempotency-key.The
          Idempotency Key will be valid for 24 hours. '
          required: true
          schema:
            type: string
            default: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        "200":
          description: Customer updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        "500":
          description: Internal Server Error
      security:
        - ProtectedApiKey: []
    post:
      tags:
        - Customer
        - Protected
      summary: Create a customer record.
      description: Create a customer record.
      operationId: createCustomer_1
      parameters:
        - name: x-api-key
          in: header
          description: 'API Key to obtain access to the api '
          required: true
          schema:
            type: string
            default: ""
        - name: x-correlation-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          required: true
          schema:
            type: string
            default: ""
        - name: x-idempotent-key
          in: header
          description: 'Every request will be processed only once per x-idempotency-key.The
          Idempotency Key will be valid for 24 hours. '
          required: true
          schema:
            type: string
            default: ""
      requestBody:
        description: The customer to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        "201":
          description: Customer created
        "500":
          description: Internal Server Error
        "200":
          description: The created customer object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
      security:
        - ProtectedApiKey: []
    patch:
      tags:
        - Customer
        - Protected
      summary: Patching customer details.
      description: Patching customer details.
      operationId: patchCustomer_1
      parameters:
        - name: x-correlation-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          required: true
          schema:
            type: string
            default: ""
        - name: x-idempotent-key
          in: header
          description: 'Every request will be processed only once per x-idempotency-key.The
          Idempotency Key will be valid for 24 hours. '
          required: true
          schema:
            type: string
            default: ""
      requestBody:
        description: The customer's details to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        "200":
          description: Customer updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        "500":
          description: Internal Server Error
      security:
        - ProtectedApiKey: []
  /protected/v1/customers/checks:
    post:
      tags:
        - Customer
        - Protected
      summary: Creates validation status of customer
      operationId: createCustomerCheckStatus
      parameters:
        - name: x-api-key
          in: header
          description: 'API Key to obtain access to the api '
          required: true
          schema:
            type: string
            default: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerificationStateDto'
        required: true
      responses:
        "201":
          description: Customer check status created
        "500":
          description: Internal Server Error
        "200":
          description: createCustomerCheckStatus 200 response
          content:
            application/json:
              schema:
                type: string
      security:
        - ProtectedApiKey: []
  /protected/v1/customers/checks/{customerId}:
    get:
      tags:
        - Customer
        - Protected
      summary: Returns list of latest customer validations and their status for a
        customer
      operationId: fetchCustomerValidations
      parameters:
        - name: x-api-key
          in: header
          description: 'API Key to obtain access to the api '
          required: true
          schema:
            type: string
            default: ""
        - name: customerId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of cusomter validations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VerificationStateDto'
        "500":
          description: Internal Server Error
      security:
        - ProtectedApiKey: []
  /protected/v1/customers/{customerId}:
    delete:
      tags:
        - Protected
      summary: Delete a customer record
      operationId: deleteCustomer
      parameters:
        - name: x-api-key
          in: header
          description: 'API Key to obtain access to the api '
          required: true
          schema:
            type: string
            default: ""
        - name: x-correlation-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          required: true
          schema:
            type: string
            default: ""
        - name: customerId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: deleteCustomer 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
      security:
        - ProtectedApiKey: []
  /protected/v1/customers/{customerId}/companies:
    get:
      tags:
        - Customer
        - Protected
      summary: Get a customer's list of companies
      operationId: retrieveCustomerCompanies_1
      parameters:
        - name: x-api-key
          in: header
          description: 'API Key to obtain access to the api '
          required: true
          schema:
            type: string
            default: ""
        - name: x-correlation-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          required: true
          schema:
            type: string
            default: ""
        - name: customerId
          in: path
          description: Id of customer requested
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Customer companies retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyDto'
        "500":
          description: Internal Server Error
      security:
        - ProtectedApiKey: []
  /protected/v1/customers/{userId}/idvs:
    put:
      tags:
        - Customer
        - Protected
      summary: Update a customer idv record
      operationId: updateCustomerIdv
      parameters:
        - name: x-api-key
          in: header
          description: 'API Key to obtain access to the api '
          required: true
          schema:
            type: string
            default: ""
        - name: x-correlation-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          required: true
          schema:
            type: string
            default: ""
        - name: x-idempotent-key
          in: header
          description: 'Every request will be processed only once per x-idempotency-key.The
          Idempotency Key will be valid for 24 hours. '
          required: true
          schema:
            type: string
            default: ""
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdvDto'
        required: true
      responses:
        "200":
          description: Customer updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
        "500":
          description: Internal Server Error
      security:
        - ProtectedApiKey: []
  /protected/v1/customers/{userId}/idvs/complete:
    put:
      tags:
        - Customer
        - Protected
      summary: Get a customer's list of companies
      operationId: customerIdvComplete
      parameters:
        - name: x-api-key
          in: header
          description: 'API Key to obtain access to the api '
          required: true
          schema:
            type: string
            default: ""
        - name: x-correlation-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          required: true
          schema:
            type: string
            default: ""
        - name: x-idempotent-key
          in: header
          description: 'Every request will be processed only once per x-idempotency-key.The
          Idempotency Key will be valid for 24 hours. '
          required: true
          schema:
            type: string
            default: ""
        - name: userId
          in: path
          description: Id of user requested
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdvDto'
        required: true
      responses:
        "200":
          description: Customer companies retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        "500":
          description: Internal Server Error
      security:
        - ProtectedApiKey: []
  /v1/companies:
    get:
      tags:
        - Company
      summary: Get company for specific user
      description: Get company for specific userThis API requires a JWT Authorization
        header with a scope of account. It is used for service to service communication
      operationId: retrieveCompanyForUser
      parameters:
        - name: x-correlation-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          required: true
          schema:
            type: string
            default: ""
      responses:
        "200":
          description: List of companies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyDto'
        "404":
          description: Companies not found
        "500":
          description: Internal Server Error
      security:
        - BearerAuth: []
        - OpenID:
            - accounts
    post:
      tags:
        - Company
      summary: Create a new company entity
      description: Create a new company entityThis API requires a JWT Authorization
        header with a scope of account.It is used for service to service communication
      operationId: createCompany_1
      parameters:
        - name: x-correlation-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          required: true
          schema:
            type: string
            default: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyDto'
        required: true
      responses:
        "201":
          description: Company created
        "500":
          description: Internal Server Error
        "200":
          description: createCompany_1 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyDto'
      security:
        - BearerAuth: []
        - OpenID:
            - accounts
  /v1/companies/{companyId}:
    get:
      tags:
        - Company
      summary: Get company based on its id
      description: Get company based on its idThis API requires a JWT Authorization
        header with a scope of account. It is used for service to service communication
      operationId: retrieveCompanyViaId
      parameters:
        - name: x-correlation-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          required: true
          schema:
            type: string
            default: ""
        - name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Company details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyDto'
        "404":
          description: Company not found
        "500":
          description: Internal Server Error
      security:
        - BearerAuth: []
        - OpenID:
            - accounts
  /v1/companies/{companyId}/directors:
    get:
      tags:
        - Company
      summary: Get list of director for specific company
      description: Get list of director for specific company.This API requires a JWT
        Authorization header with a scope of account.It is used for service to service
        communication
      operationId: retrieveCompanyDirectors_2
      parameters:
        - name: x-correlation-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          required: true
          schema:
            type: string
            default: ""
        - name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of directors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        "404":
          description: Company not found
        "500":
          description: Internal Server Error
      security:
        - BearerAuth: []
        - OpenID:
            - accounts
    post:
      tags:
        - Company
      summary: Add directors to a company
      description: Add directors to a companyThis API requires a JWT Authorization
        header with a scope of account or registration. It is used for service to
        service communication
      operationId: createCompanyDirectors_1
      parameters:
        - name: x-correlation-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          required: true
          schema:
            type: string
            default: ""
        - name: companyId
          in: path
          description: 'Every request will be processed only once per x-idempotency-key.The
          Idempotency Key will be valid for 24 hours. '
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Customer'
        required: true
      responses:
        "201":
          description: Directors added
        "500":
          description: Internal Server Error
        "200":
          description: createCompanyDirectors_1 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
      security:
        - BearerAuth: []
        - OpenID:
            - accounts
            - registration
  /v1/customers:
    get:
      tags:
        - Customer
        - External
      summary: Get a customer details
      operationId: getCustomer_1
      parameters:
        - name: x-correlation-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          required: true
          schema:
            type: string
            default: ""
      responses:
        "200":
          description: Customer found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        "500":
          description: Internal Server Error
      security:
        - BearerAuth:
            - accounts
    put:
      tags:
        - Customer
        - External
      summary: Update a customer record.
      description: Update a customer record.
      operationId: updateCustomer_2
      parameters:
        - name: x-correlation-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          required: true
          schema:
            type: string
            default: ""
      requestBody:
        description: The customer to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        "200":
          description: Customer updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        "500":
          description: Internal Server Error
      security:
        - BearerAuth:
            - accounts
    post:
      tags:
        - Customer
        - External
      summary: Create a customer record.
      description: Create a customer record.
      operationId: createCustomer_2
      parameters:
        - name: x-correlation-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          required: true
          schema:
            type: string
            default: ""
      requestBody:
        description: The customer to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        "201":
          description: Customer created
        "500":
          description: Internal Server Error
        "200":
          description: The created customer object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
      security:
        - BearerAuth:
            - accounts
    patch:
      tags:
        - Customer
        - External
      summary: Create a customer record.
      description: Create a customer record.
      operationId: patchCustomer_2
      parameters:
        - name: x-correlation-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          required: true
          schema:
            type: string
            default: ""
      requestBody:
        description: The customer to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        "200":
          description: Customer updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        "500":
          description: Internal Server Error
      security:
        - BearerAuth:
            - accounts
  /v1/customers/idv:
    get:
      tags:
        - Customer
        - External
      summary: Get customer Idv.
      description: Get customer Idv.
      operationId: getCustomerIdv
      parameters:
        - name: x-correlation-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          required: true
          schema:
            type: string
            default: ""
      responses:
        "200":
          description: Customer found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdvDto'
        "500":
          description: Internal Server Error
      security:
        - BearerAuth:
            - accounts
  /v1/customers/state:
    get:
      tags:
        - CustomerDto
      summary: Get a customer state
      description: Get the customers current state
      operationId: retrieveCustomerState_1
      parameters: []
      responses:
        "200":
          description: The created customer object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerStateDto'
      security:
        - OpenID:
            - registration
  /v1/customers/{id}/attestations:
    post:
      tags:
        - AttestationDto
      summary: Save attestation.
      description: Save attestation.
      operationId: saveAttestation
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: The attestations to save
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttestationDto'
        required: true
      responses:
        "201":
          description: Attestation created
        "500":
          description: Internal Server Error
        "200":
          description: The status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
      security:
        - BearerAuth:
            - device
            - accounts
components:
  schemas:
    AddressDto:
      type: object
      properties:
        postCode:
          maxLength: 10
          minLength: 3
          pattern: "^[a-zA-Z0-9 ]*$"
          type: string
          description: The address' postcode.
          example: BT923AT
        addressLine1:
          maxLength: 100
          minLength: 3
          type: string
          description: First line of address.
          example: 15 Druminiskill Road
        addressLine2:
          maxLength: 100
          minLength: 3
          type: string
          description: Second line of address.
          example: Macken
        country:
          pattern: "^[a-zA-Z0-9 ]*$"
          type: string
          description: Address' country.
          example: UK
      description: Company address.
    AttestationDto:
      required:
        - attestationAccepted
        - subject
      type: object
      properties:
        version:
          type: string
        documentHash:
          type: string
        subject:
          minLength: 1
          type: string
        attestationAccepted:
          type: boolean
    BigDecimal:
      type: object
      properties:
        scale:
          type: integer
          format: int32
        precision:
          type: integer
          format: int32
      description: Amount invested into the business in the last 5 years.
      example: "20000"
    CheckType:
      type: string
      enum:
        - IDV
        - SCREENING
        - TSANDCS
        - OTP
    CompanyDto:
      required:
        - amountInvestedLast5Years
        - directors
        - id
        - mainSourceOfIncome
        - name
        - natureOfBusiness
        - operationalCountries
        - previousSicDetails
        - profile
        - registeredInUK
        - registrationNumber
        - sourcesOfDeposit
        - sourcesOfInvestment
        - staffSize
        - tradeExclusivelyInUK
        - tradingAddress
        - tradingName
        - typesOfTransactions
      type: object
      properties:
        id:
          maxLength: 36
          minLength: 10
          type: string
          description: Company identifier.
          example: "23723"
        name:
          maxLength: 100
          minLength: 3
          type: string
          description: Name of the company.
          example: Instil Limited
        registrationNumber:
          maxLength: 100
          minLength: 3
          type: string
          description: Unique identifier given by companies house for each company.
            You need this to be legally registered as a company.
          example: "235134"
        typesOfTransactions:
          maxLength: 100
          minLength: 3
          type: string
          description: Company properties.
        mainSourceOfIncome:
          maxLength: 100
          minLength: 3
          type: string
        amountInvestedLast5Years:
          type: number
        sourcesOfInvestment:
          type: array
          description: List of source of investment.
          example: Bank or Business Loan
          items:
            type: string
        sourcesOfDeposit:
          type: array
          description: List of sources of deposit
          example: Generated from business operations
          items:
            type: string
        tradeExclusivelyInUK:
          type: boolean
        registeredInUK:
          type: boolean
        profile:
          $ref: '#/components/schemas/CompanyProfileDto'
        directors:
          type: array
          description: Company director's individual properties
          items:
            $ref: '#/components/schemas/Customer'
        tradingName:
          type: string
          description: Trading name of the company.
        tradingAddress:
          type: string
          description: Trading address of the company.
        natureOfBusiness:
          type: string
          description: Nature of business of the company.
        operationalCountries:
          type: array
          description: Number of countries company is operational
          items:
            type: string
        staffSize:
          type: integer
          description: Employee strength of a company
          format: int32
        previousSicDetails:
          $ref: '#/components/schemas/previousSicDetails'
    CompanyProfileDto:
      required:
        - address
        - amountInvestedLast5Years
        - expectedCashDeposit
        - expectedTurnover
        - initialDepositAmount
        - lengthRegistered
        - website
      type: object
      properties:
        address:
          $ref: '#/components/schemas/AddressDto'
        website:
          type: string
          description: Website domain.
          example: www.instillimited.co.uk
        amountInvestedLast5Years:
          $ref: '#/components/schemas/BigDecimal'
        expectedTurnover:
          $ref: '#/components/schemas/BigDecimal'
        initialDepositAmount:
          $ref: '#/components/schemas/initialDepositAmount'
        expectedCashDeposit:
          $ref: '#/components/schemas/expectedCashDeposit'
        lengthRegistered:
          type: integer
          description: Length of time the company has been registered with companies
            house in years.
          format: int32
          example: 8
    Created:
      type: object
      properties:
        time:
          type: integer
          format: int64
        nanos:
          type: integer
          format: int32
      description: Created Time
      example: 2020-10-19 19:32:03.581
    CrmUpdated:
      type: object
      properties:
        time:
          type: integer
          format: int64
        nanos:
          type: integer
          format: int32
      description: Created Time
      example: 2020-10-19 19:32:44.143
    Customer:
      required:
        - AddressLine1
        - AddressLine2
        - BirthCountry
        - BusinessOwner
        - City
        - CompanyId
        - Country
        - Created
        - CrmId
        - CrmUpdated
        - CustomerState
        - CustomerType
        - Dob
        - Email
        - EmailState
        - FirstName
        - Id
        - LastName
        - MobileNumber
        - PostCode
        - PrimaryNationality
        - TaxJurisdictions
        - TermsAccepted
        - TermsVersion
        - UserId
      type: object
      properties:
        Id:
          type: string
          description: Unique Id for the customer.
          example: 1f8b7526-327f-4df6-8cd6-afcf4f3cbfb1
        CompanyId:
          type: string
          description: Unique company identifier.
          example: 9ef69bf2-e7f3-4034-bf8b-8eb3a4568ee1
        Created:
          $ref: '#/components/schemas/Created'
        CrmId:
          type: string
          description: SF Id
          example: 00317000017z3xnAAA
        CrmUpdated:
          $ref: '#/components/schemas/CrmUpdated'
        UserId:
          maxLength: 36
          minLength: 10
          type: string
          description: Unique Id for the user.
          example: d6c4dc92-4752-4fec-9c1d-e4b175e9b513
        Email:
          type: string
          description: Customer's email address.
          format: email
          example: jhudson@gmail.com
        EmailState:
          $ref: '#/components/schemas/EmailState'
        Dob:
          maxLength: 15
          minLength: 3
          pattern: "^[0-9 \\-\\/]*$"
          type: string
          description: Customer's date of birth.
          example: 23-05-1999
        PostCode:
          maxLength: 10
          minLength: 3
          pattern: "^[a-zA-Z0-9 ]*$"
          type: string
          description: Customer's postcode.
          example: BT923AT
        AddressLine1:
          maxLength: 100
          minLength: 3
          type: string
          description: Customer's address.
          example: 15 Drumlane road
        AddressLine2:
          maxLength: 100
          minLength: 3
          type: string
          description: Customer's address.
          example: Enniskillen.
        Country:
          type: string
          description: Residential Country
          example: UK
        City:
          maxLength: 10
          minLength: 3
          type: string
          description: Customer's city.
          example: DUBAI
        MobileNumber:
          maxLength: 50
          minLength: 3
          pattern: "^[0-9 -/]*$"
          type: string
          description: Customer's mobile number.
          example: "00447391033345"
        TermsAccepted:
          type: boolean
          description: Field used to see whether the customer has accepted the terms
            and conditions.
          example: true
        TermsVersion:
          maxLength: 100
          minLength: 1
          type: string
          description: Used to record previous versions of the terms and conditions.
          example: "0.1"
        BusinessOwner:
          type: boolean
          description: Field used to see whether the customer is a business owner.
          example: true
        FirstName:
          maxLength: 50
          minLength: 2
          type: string
          description: Customer's first name.
          example: James
        LastName:
          maxLength: 50
          minLength: 2
          type: string
          description: Customer's last name.
          example: Hennesy
        CustomerState:
          $ref: '#/components/schemas/CustomerState'
        CustomerType:
          $ref: '#/components/schemas/CustomerType'
        BirthCountry:
          maxLength: 75
          minLength: 2
          type: string
          description: Customer's country of birth
          example: United Kingdom
        PrimaryNationality:
          maxLength: 75
          minLength: 2
          type: string
          description: Primary Nationality
          example: UK
        TaxJurisdictions:
          type: array
          description: Tax Jurisdictions list with country and tax ID
          example: "[{'TaxId': 'Tax-001', 'TaxPayableCountry': 'India'}]"
          items:
            $ref: '#/components/schemas/TaxJurisdiction'
      description: Information about a Customer
    CustomerCreditApplicationStatus:
      type: string
      enum:
        - APPROVED
        - REJECTED
        - FAILED
    CustomerCreditApplicationUpdate:
      required:
        - customerId
        - status
        - type
      type: object
      properties:
        customerId:
          minLength: 1
          type: string
        status:
          $ref: '#/components/schemas/CustomerCreditApplicationStatus'
        type:
          $ref: '#/components/schemas/Type'
    CustomerCreditDto:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/CustomerCreditApplicationStatus'
        timestamp:
          type: string
          format: date-time
    CustomerState:
      type: string
      enum:
        - ONBOARD_INVITED
        - ONBOARD_OTP
        - ONBOARD_BUSINESS
        - ONBOARD_DIRECTORS_SELECT
        - ONBOARD_DIRECTORS
        - ONBOARD_CUSTOMER
        - ONBOARD_CUSTOMER_TYPE
        - ONBOARD_TCS_INDIVIDUAL
        - ONBOARD_TCS_BUSINESS
        - ONBOARD_IDV
        - ONBOARD_IDV_PROCESSING
        - ONBOARD_PROCESSING
        - ONBOARD_FAILED
        - ONBOARD_COMPLETE
        - ACTIVE
        - SUSPENDED
        - LIMITED
        - SCREENING_COMPLETE
        - IDV_COMPLETE
    CustomerStateDto:
      type: object
      properties:
        customerId:
          maxLength: 36
          minLength: 36
          type: string
        customerState:
          $ref: '#/components/schemas/CustomerState'
    CustomerType:
      type: string
      description: Type of customer.
      example: INDIVIDUAL
      enum:
        - INDIVIDUAL
        - BUSINESS
    EmailState:
      type: string
      description: Customer's email state.
      example: APPROVED
      enum:
        - APPROVED
        - PENDING
    IdvDto:
      required:
        - customerId
        - documentId
        - documentType
        - id
        - reportLink
        - result
        - resultsLink
        - status
      type: object
      properties:
        id:
          type: string
        customerId:
          type: string
        resultsLink:
          type: string
        reportLink:
          type: string
        status:
          $ref: '#/components/schemas/IdvStatus'
        result:
          $ref: '#/components/schemas/IdvResult'
        documentId:
          type: string
        documentType:
          type: string
    IdvResult:
      type: string
      enum:
        - clear
        - consider
        - MANUAL_APPROVE
    IdvStatus:
      type: string
      enum:
        - clear
        - consider
        - complete
        - in_progress
        - awaiting_data
    Status:
      type: string
      enum:
        - SUCCESS
        - FAILURE
        - PENDING
    TaxJurisdiction:
      required:
        - TaxId
        - TaxPayableCountry
      type: object
      properties:
        TaxId:
          type: string
          description: Tax Id
          example: Tax-001
        TaxPayableCountry:
          maxLength: 75
          minLength: 2
          type: string
          description: Tax Payable Country
          example: India
      description: Information tax
    Timestamp:
      allOf:
        - $ref: '#/components/schemas/Date'
        - type: object
          properties:
            time:
              type: integer
              format: int64
            nanos:
              type: integer
              format: int32
    Type:
      type: string
      enum:
        - SOFT
        - HARD
    VerificationStateDto:
      required:
        - checkType
        - created
        - customerId
        - status
      type: object
      properties:
        customerId:
          type: string
        checkType:
          $ref: '#/components/schemas/CheckType'
        status:
          $ref: '#/components/schemas/Status'
        created:
          $ref: '#/components/schemas/Timestamp'
    Void:
      type: object
    expectedCashDeposit:
      type: object
      properties:
        scale:
          type: integer
          format: int32
        precision:
          type: integer
          format: int32
      description: Cash Deposit Company expects to receive
      example: Â£5000.00
    initialDepositAmount:
      type: object
      properties:
        scale:
          type: integer
          format: int32
        precision:
          type: integer
          format: int32
      description: Amount Company will deposit into account
      example: Â£5000.00
    previousSicDetails:
      required:
        - sicCode
        - sicCodeDescription
      type: object
      properties:
        sicCode:
          type: string
          description: Business SIC code
          example: "59200"
        sicCodeDescription:
          type: string
          description: Description of SIC code
          example: Sound Recording and Music Publishing Activities
      description: Previous SIC details of the company.
  securitySchemes:
    ApiKey:
      type: apiKey
      description: Please request this value from the infrastructure team
      name: apiKey
      in: header
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: jwt
    ProtectedApiKey:
      type: apiKey
      description: Please request this value from the infrastructure team
      name: X-API-KEY
      in: header