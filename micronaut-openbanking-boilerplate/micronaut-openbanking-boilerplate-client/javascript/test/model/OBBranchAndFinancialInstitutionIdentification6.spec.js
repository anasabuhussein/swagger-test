/*
 * Beneficiary
 * The beneficiaries resource is used by an AISP to retrieve the account beneficiaries information for a specific AccountId or to retrieve the beneficiaries information in bulk for account(s) that the PSU has authorised to access.
 *
 * OpenAPI spec version: 3.1.7
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.29
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Beneficiary);
  }
}(this, function(expect, Beneficiary) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('OBBranchAndFinancialInstitutionIdentification6', function() {
      beforeEach(function() {
        instance = new Beneficiary.OBBranchAndFinancialInstitutionIdentification6();
      });

      it('should create an instance of OBBranchAndFinancialInstitutionIdentification6', function() {
        // TODO: update the code to test OBBranchAndFinancialInstitutionIdentification6
        expect(instance).to.be.a(Beneficiary.OBBranchAndFinancialInstitutionIdentification6);
      });

      it('should have the property identification (base name: "identification")', function() {
        // TODO: update the code to test the property identification
        expect(instance).to.have.property('identification');
        // expect(instance.identification).to.be(expectedValueLiteral);
      });

      it('should have the property name (base name: "name")', function() {
        // TODO: update the code to test the property name
        expect(instance).to.have.property('name');
        // expect(instance.name).to.be(expectedValueLiteral);
      });

      it('should have the property postalAddress (base name: "postalAddress")', function() {
        // TODO: update the code to test the property postalAddress
        expect(instance).to.have.property('postalAddress');
        // expect(instance.postalAddress).to.be(expectedValueLiteral);
      });

      it('should have the property schemeName (base name: "schemeName")', function() {
        // TODO: update the code to test the property schemeName
        expect(instance).to.have.property('schemeName');
        // expect(instance.schemeName).to.be(expectedValueLiteral);
      });

    });
  });

}));
